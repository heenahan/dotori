name: CI/CD Docker

# 트리거를 수행할 브랜치를 지정합니다.
on:
  workflow_dispatch:
    inputs:
      name:
        description: '서버 배포를 수행하기 위해 승인을 해주세요'
        required: true
        default: '서버 배포를 수행하기 위한 워크플로우 입니다'

# 환경설정
env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/dotori-auto-deploy
  CONTAINER_NAME1: dotori-auto-deploy-blue
  CONTAINER_NAME2: dotori-auto-deploy-green
  DOMAIN_NAME: ec2-13-209-225-141.ap-northeast-2.compute.amazonaws.com
  NAME: dotori_prod

jobs:
  # 빌드 Job
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # github repository에서 checkout
      - uses: actions/checkout@v2

      # docker build 수행
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      # GitHub 컨테이너 레지스트리에 로그인 후 빌드 & 푸시
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
  # 배포 Job
  deploy:
    needs: build  # build 후에 실행되도록 정의
    name: Deploy
    runs-on: [ self-hosted, label-dotori ] # AWS ./configure에서 사용할 label명
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: RUN deploy.sh
        run: |
          docker pull ghcr.io/heenahan/dotori-auto-deploy:latest
          sh /home/ec2-user/deploy.sh
